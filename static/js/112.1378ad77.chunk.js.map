{"version":3,"file":"static/js/112.1378ad77.chunk.js","mappings":"6KAGMA,EAAa,qJAGd,OAHc,oCACfC,MAAQ,CACJC,OAAO,GACV,EAeA,OAfA,yCAED,SAAkBA,EAAOC,GACrBC,QAAQC,IAAIH,EAAOC,GACnBG,KAAKC,SAAS,CACVL,OAAO,GAEf,GAAC,oBAED,WACI,OAAII,KAAKL,MAAMC,OACJ,SAAC,IAAY,IAGjBI,KAAKE,MAAMC,QACtB,KAAC,EAlBc,CAASC,EAAAA,WAqB5B,K,0KCVA,EAXuB,SAAH,GAAoB,IAAdC,EAAM,EAANA,OAChBC,EAA6BD,EAA7BC,OAAQC,EAAqBF,EAArBE,MAAOC,EAAcH,EAAdG,GAAIC,EAAUJ,EAAVI,MAC3B,OACE,UAAC,KAAI,CAACC,GAAE,kBAAaF,GAAK,WACxB,gBAAKG,IAAKL,EAAQM,IAAKL,EAAOM,UAAU,sBACxC,gBAAKA,UAAU,oBAAmB,SAAEN,KACpC,iBAAKM,UAAU,qBAAoB,UAAEJ,EAAM,SAGjD,ECLaK,EAAa,SAACC,EAASX,EAAWY,GAC7C,OAAQD,GACN,IAAK,UACH,OAAO,SAACE,EAAA,EAAO,IACjB,IAAK,UACH,OAAOD,GAAU,SAACC,EAAA,EAAO,KAAM,SAACb,EAAS,IAC3C,IAAK,YACH,OAAO,SAACA,EAAS,IACnB,IAAK,QACH,OAAO,SAACc,EAAA,EAAY,IAEtB,QACE,MAAM,IAAIC,MAAM,4BAEtB,EAoDA,EAlDmB,WACjB,OAAoCC,EAAAA,EAAAA,UAAS,IAAG,eAAzCC,EAAU,KAAEC,EAAa,KAChC,GAA4BF,EAAAA,EAAAA,WAAS,GAAK,eAAnCJ,EAAO,KAAEO,EAAQ,KACxB,GAA4BH,EAAAA,EAAAA,UAAS,GAAE,eAAhCI,EAAM,KAAEC,EAAS,KACxB,GACEC,EAAAA,EAAAA,KADMC,EAAO,EAAPA,QAAgBC,GAAF,EAALhC,MAAmB,EAAZgC,cAAcb,EAAO,EAAPA,QAASc,EAAU,EAAVA,YAG/CC,EAAAA,EAAAA,YAAU,WACRC,IACAR,GAAS,EAEX,GAAG,IAEH,IAAMQ,EAAgB,WACpBH,EAAaJ,GACVQ,MAAK,SAACC,GACLX,EAAc,GAAD,eAAKD,IAAU,OAAKY,KACjCR,EAAUD,EAASS,EAAIC,OACzB,IACCF,MAAK,kBAAMH,EAAW,YAAY,GACvC,EAMMxB,EAAmB,OAAVgB,QAAU,IAAVA,OAAU,EAAVA,EAAYc,KAAI,SAAC9B,GAC9B,OACE,eAAIQ,UAAU,eAAc,UAC1B,SAAC,EAAc,CAACR,OAAQA,KADQA,EAAOG,GAI7C,IAEA,OACE,iBAAKK,UAAU,eAAc,WAC3B,eAAIA,UAAU,eAAc,SACzBC,EAAWC,GAAS,kBAAMV,CAAM,GAAEW,MAErC,mBACEH,UAAU,mCACVuB,QAASL,EACTM,SAAUV,EAAQ,UAElB,gBAAKd,UAAU,QAAO,SAAC,kBAI/B,E,UChDA,EAjBmB,WACjB,OACE,iCACE,UAACyB,EAAA,EAAM,YACL,iBAAMC,KAAK,cAAcC,QAAQ,mBACjC,2BAAO,oBAET,SAACC,EAAA,EAAS,KAEV,SAAC/C,EAAA,EAAa,WACZ,SAAC,EAAU,QAKnB,C","sources":["components/errorBoundary/ErrorBoundary.js","components/comicsListItem/ComicsListItem.js","components/comicsList/ComicsList.js","pages/ComicsPage.js"],"sourcesContent":["import { Component } from \"react\";\nimport ErrorMessage from \"../errorMessage/ErrorMessage\";\n\nclass ErrorBoundary extends Component {\n    state = {\n        error: false\n    }\n\n    componentDidCatch(error, errorInfo) {\n        console.log(error, errorInfo);\n        this.setState({\n            error: true\n        })\n    }\n\n    render() {\n        if (this.state.error) {\n            return <ErrorMessage/>\n        }\n\n        return this.props.children;\n    }\n}\n\nexport default ErrorBoundary;","import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nconst ComicsListItem = ({ comics }) => {\r\n  const { imgUrl, title, id, price } = comics;\r\n  return (\r\n    <Link to={`/comics/${id}`}>\r\n      <img src={imgUrl} alt={title} className=\"comics__item-img\" />\r\n      <div className=\"comics__item-name\">{title}</div>\r\n      <div className=\"comics__item-price\">{price}$</div>\r\n    </Link>\r\n  );\r\n};\r\n\r\nexport default ComicsListItem;\r\n","import \"./comicsList.scss\";\nimport MarvelServices from \"../../services/MarvelServices\";\nimport { useEffect, useState } from \"react\";\nimport Spinner from \"../spinner/Spinner\";\nimport ErrorMessage from \"../errorMessage/ErrorMessage\";\nimport ComicsListItem from \"../comicsListItem/ComicsListItem\";\n\nexport const setContent = (process, Component, isEmpty) => {\n  switch (process) {\n    case \"Waiting\":\n      return <Spinner />;\n    case \"Loading\":\n      return isEmpty ? <Spinner /> : <Component />;\n    case \"Confirmed\":\n      return <Component />;\n    case \"Error\":\n      return <ErrorMessage />;\n\n    default:\n      throw new Error(\"Unexpected process state\");\n  }\n};\n\nconst ComicsList = () => {\n  const [comicsList, setComicsList] = useState([]);\n  const [isEmpty, setEmpty] = useState(true);\n  const [offset, setOffset] = useState(0);\n  const { loading, error, getAllComics, process, setProcess } =\n    MarvelServices();\n\n  useEffect(() => {\n    getListComics();\n    setEmpty(false);\n    // eslint-disable-next-line\n  }, []);\n\n  const getListComics = () => {\n    getAllComics(offset)\n      .then((res) => {\n        setComicsList([...comicsList, ...res]);\n        setOffset(offset + res.length);\n      })\n      .then(() => setProcess(\"Confirmed\"));\n  };\n\n  // console.log(\" body\");\n\n  // console.log(\"comicsList >>> \", comicsList);\n\n  const comics = comicsList?.map((comics) => {\n    return (\n      <li className=\"comics__item\" key={comics.id}>\n        <ComicsListItem comics={comics} />\n      </li>\n    );\n  });\n\n  return (\n    <div className=\"comics__list\">\n      <ul className=\"comics__grid\">\n        {setContent(process, () => comics, isEmpty)}\n      </ul>\n      <button\n        className=\"button button__main button__long\"\n        onClick={getListComics}\n        disabled={loading}\n      >\n        <div className=\"inner\">load more</div>\n      </button>\n    </div>\n  );\n};\n\nexport default ComicsList;\n","import React from \"react\";\r\nimport { Helmet } from \"react-helmet\";\r\nimport AppBanner from \"../components/appBanner/AppBanner\";\r\nimport ComicsList from \"../components/comicsList/ComicsList\";\r\nimport ErrorBoundary from \"../components/errorBoundary/ErrorBoundary\";\r\n\r\nconst ComicsPage = () => {\r\n  return (\r\n    <>\r\n      <Helmet>\r\n        <meta name=\"description\" content=\"Marvel comics\" />\r\n        <title>Comics Page</title>\r\n      </Helmet>\r\n      <AppBanner />\r\n      {/* <div className=\"char__content\"> */}\r\n      <ErrorBoundary>\r\n        <ComicsList />\r\n      </ErrorBoundary>\r\n      {/* </div> */}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default ComicsPage;\r\n"],"names":["ErrorBoundary","state","error","errorInfo","console","log","this","setState","props","children","Component","comics","imgUrl","title","id","price","to","src","alt","className","setContent","process","isEmpty","Spinner","ErrorMessage","Error","useState","comicsList","setComicsList","setEmpty","offset","setOffset","MarvelServices","loading","getAllComics","setProcess","useEffect","getListComics","then","res","length","map","onClick","disabled","Helmet","name","content","AppBanner"],"sourceRoot":""}